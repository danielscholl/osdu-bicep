name: Job - Module Publish

on:
  workflow_call:
    inputs:
      tag:
        description: "The git tag of the module to publish."
        required: true
        type: string
    secrets:
      # Secrets must be passed from the caller workflow explicitly.
      PUBLISH_CLIENT_ID:
        required: true
      PUBLISH_TENANT_ID:
        required: true
      PUBLISH_SUBSCRIPTION_ID:
        required: true
      PUBLISH_REGISTRY_SERVER:
        required: true
  workflow_dispatch:
    inputs:
      tag:
        description: "The git tag of the module to publish."
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Parse tag
        id: parse-tag
        uses: actions/github-script@v6.3.2
        with:
          result-encoding: string
          script: |
            const script = require("./scripts/github-actions/parse-tag.js")
            const tag = "${{ github.event.inputs.tag || inputs.tag }}"
            script({ core, tag })

      - name: Checkout tag
        uses: actions/checkout@v3
        with:
          # Input contexts for workflow_dispatch and workflow_call are inconsistent.
          # For workflow_dispatch, use ${{ github.event.inputs.<variable_name> }}
          # For workflow_call, use ${{ inputs.<variable_name> }}
          ref: ${{ github.event.inputs.tag || inputs.tag }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.PUBLISH_CLIENT_ID }}
          tenant-id: ${{ secrets.PUBLISH_TENANT_ID }}
          subscription-id: ${{ secrets.PUBLISH_SUBSCRIPTION_ID }}

      - name: Install Bicep
        shell: pwsh
        run: |
          az bicep install

      - name: Publish module
        env:
          SERVER: ${{ secrets.AZURE_REGISTRY_SERVER }}
        run: bicep publish "bicep/modules/${{ steps.parse-tag.outputs.module_path }}/main.json" --target "br:osdubicep.azurecr.io/${{ steps.parse-tag.outputs.module_path }}:${{ steps.parse-tag.outputs.version }}"
